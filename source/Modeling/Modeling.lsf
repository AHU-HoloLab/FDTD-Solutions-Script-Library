######################################################################
# 软件版本: Lumerical FDTD Solutions 2019b R4 之后
# 使用说明: 根据需要修改脚本
######################################################################

# 清空工作区域
deleteall;
clear;

# 外部函数声明
Draw_MetaAtom;

# 长度
m  = 1e-0;
cm = 1e-2;
mm = 1e-3;
um = 1e-6;
nm = 1e-9;
pm = 1e-12;
fm = 1e-15;

# 时间
s  = 1;
ms = 1e-3;
us = 1e-6;
ns = 1e-9;
ps = 1e-12;
fs = 1e-15;

# 波长
lambda_red   = 655*nm;
lambda_green = 532*nm;
lambda_blue  = 473*nm;

# 系统自带材料
Si = "Si (Silicon) - Palik";
SiO2 = "SiO2 (Glass) - Palik";
Si3N4 = "Si3N4 (Silicon Nitride) - Phillip";
Au = "Au (Gold) - Palik";
Ag = "Ag (Silver) - Palik (0-2um)";

# 以下材料若要使用需要先导入
TiO2 = "TiO2 (Nanoparticles) - (405-635nm)";
MgF2 = "MgF2 - (30-2000nm)";
PDMS = "PDMS(Fluid) - (820-2500nm)";

# 数据文件位置
NAME = "TEST.mdat";
INPATH = "";
OUTPATH = "";
PATH = INPATH+NAME+".mdat";

# 参数
Unit = 300*nm;
MetaAtom_W = 100*nm;
MetaAtom_L = 200*nm;
MetaAtom_H = 120*nm;
Sub_thick = 1000*nm;
Lambda = 632.8*nm;
mesh_override = 30*nm;
MetaAtom_Material = Au;
N_step = 180;

# 设置整体大小参数
Data_raw = readdata(INPATH+NAME+".mdat");
N_x = Data_raw(1, 1);
N_y = Data_raw(1, 2);

Base_Width  = Unit * N_x;
Base_Length = Unit * N_y;

Data = Data_raw(2:end, 1:2);
N_step = max(Data(1:end, 2));

# 绘制 Metasurface 单元结构阵列
Draw_MetaAtom_PB(PATH, Unit, MetaAtom_W, MetaAtom_L, MetaAtom_H, MetaAtom_Material, N_step);

# 添加 TFSF
addtfsf;
set("name", "source_X");
set("injection axis","z");
#set("direction", "Forward");
set("x", 0);
set("x span",Unit*(N_x+1));
set("y", 0);
set("y span",Unit*(N_y+1));
zmax = MetaAtom_H/2 + (1/4)*Lambda;
zmin = -MetaAtom_H/2 - (1/4)*Lambda;
set("z max", zmax);
set("z min", zmin);
set("wavelength start", Lambda);
set("wavelength stop", Lambda);
set("amplitude", sqrt(2)/2);
set("polarization angle", 0);
set("phase", 0);

addtfsf;
set("name", "source_Y");
set("injection axis","z");
#set("direction", "Forward");
set("x", 0);
set("x span",Unit*(N_x+1));
set("y", 0);
set("y span",Unit*(N_y+1));
zmax = MetaAtom_H/2 + (1/4)*Lambda;
zmin = -MetaAtom_H/2 - (1/4)*Lambda;
set("z max", zmax);
set("z min", zmin);
set("wavelength start", Lambda);
set("wavelength stop", Lambda);
set("amplitude", sqrt(2)/2);
set("polarization angle", 90);
set("phase", 90);

# 添加监视器
addpower;
set("name","field_profile_monitor");
# 1 = point, 2 = linear x, 3 = linear y, 4 = linear z,
# 5 = 2D x-normal, 6 = 2D y-normal, 7 = 2D z-normal, 8 = 3D
set("monitor type",7);
set("x", 0);
set("x span",Unit*(N_x)*2);
set("y", 0);
set("y span",Unit*(N_y)*2);
zm = MetaAtom_H/2 + 2/4*Lambda;
set("z", zm);

# 添加仿真区域
addfdtd;
set("dimension",2);  #  1 = 2D, 2 = 3D
set("x", 0);
set("x span",Unit*N_x+Lambda);
set("y", 0);
set("y span",Unit*N_y+Lambda);
zmax = MetaAtom_H/2 + (3/4)*Lambda;
zmin = getnamed("source_X", "z min") - (1/4)*Lambda;
set("z min", zmin);
set("z max", zmax);
set("auto shutoff min", 1e-5);
#set("pml layers", 24);
set("simulation time", 2000*fs);

# 输出完成信息
?"[BUILD COMPLETE]";

# 运行仿真
#run;
